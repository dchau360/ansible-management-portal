version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ansible_portal
      POSTGRES_USER: portal_user
      POSTGRES_PASSWORD: portal_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ansible-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portal_user -d ansible_portal"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ansible-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://portal_user:portal_password@postgres:5432/ansible_portal
      - REDIS_URL=redis://redis:6379
      - FLASK_ENV=production
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./data/ssh_keys:/app/ssh_keys
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ansible-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ansible-network
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - ansible-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  ansible-network:
    driver: bridge
